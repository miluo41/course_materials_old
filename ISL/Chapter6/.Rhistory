which.min(fwd.summary$bic)
?regsubsets
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
reg.summary$rss
fwd.summary$rss
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
bac.summary$rss
bac.summary$bic
which.min(bac.summary$bic)
which.min(bac.summary$cp)
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
which.min(seq.summary$bic)
which.min(seq.summary$cp)
?glmnet
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
model.matrix(Y~.,df)
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
names(cv.out)
cv.out$lambda.min
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
lasso.pred
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
lasso.mse
predict(lasso.mod,s=best.lambda,type='coefficients')
rm(list=ls())
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
?cv.glmnet
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
source('~/ISL/Chapter6/chapter6.R', echo=TRUE)
rm(list=ls())
install.packages("ggplot2")
install.packages("pryr")
install.packages("devtools")
devtools::install_github("hadley/lineprof")
library(devtools)
devtools::install_github("hadley/lineprof")
library(pryr)
?seq_len
seq_len(10)
is.primitive(seq)
is.primitive(seq_along)
object_size(2)
object_size(c(1))
object_size(numeric())
object_size(NULL)
object_size(NA)
x<-1:1e6
object_size(x)
y<-c(x,x,x)
object_size(y)
y<-list(x,x,x)
object_size(y)
mem_used
mem_used()
mem_change()
x<1:10
mem_change(rm(x))
mem_change(rm(y))
x<1:10
x<-1:10
address(x)
ref(x)
refs(x)
x
rm(x)
x<-1:10
y<-x
x[5]<-0
x
y
refs(x)
refs(y)
address(x)
address(y)
tracemem(x)
tracemem(y)
x[4]<-23
x[1]<-0
x[3]<-23
?tracemem
untracemem(x)
?vapply
?numeric
environment()
baseenv()
environment()
as.environment("package:stats")
environment()
e<-new.env()
environment()
e
parent.env(e)
ls(d)
ls(e)
e$a<-1
ls(e)
?parent.env
parent.frame()
parent.env(environment())
environment(sum)
environment(x)
x
x<-function() 10
x
x()
environment(x)
h <- function() {
x <- 10
function() {
x
}
}
i <- h()
x <- 20
i()
x<-1
a<-function(){}
a<-function(){}
rm(list=ls())
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
a()
x
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
a()
x
y
search()
x<-1
x<-1:10
tracemem(x)
x[2]<-0
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
head(college)
head(College)
names(College)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
dim(College)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
in_train
College[in_train,]
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
College2
College2[2,]
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
class(College2)
?createDataPartition
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
class(in_train)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
class(in_train)
dim(in_train)
names(College2)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
lm.mse
summary(lm.fit)
?lm
?createDataPartition
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
methods(preProcess())
methods(preProcess
methods(preProcess)
preProcess
UseMethod(preProcess)
methods('preProcess')
?preProcess
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
college.train
College2
preProcess(College2,method=c('center','scale'))
a<-preProcess(College2,method=c('center','scale'))
a
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
lm.mse
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
lm.mse
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
lm.mse
summary(lm.fit)
step(lm.fit)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
?glm.fit
?glmnet
library(glmnet)
?glmnet
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
names(college.train)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
names(college.train)
college.train$Apps
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
college[,'Apps']
college.train[,'Apps']
college.train[,-'Apps']
college.train[,-c('Apps')]
?select
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
X.train
?glmnet
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
X.train
dim(X.train)
dim(college.train)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
cv.out$lambda.min
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
X.train
odel.matrix(Apps ~.,college.train)
model.matrix(Apps ~.,college.train)
ridge.pred<-predict(ridge.fit,X.test,lambda=lambda.best)
redge.pred
ridge.pred
Y.train
ridge.pred
dim(Y.train)
X.test
dim(X.test)
dim(X.train)
dim(Y.train)
length(Y.train)
head(Y.train)
cv.out<-cv.glmnet(X.train,Y.train,alpha=0)
cv.out
grid
10^grid
seq(10,-2,length.out = 100)
lambda=10^grid
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
cv.out
?cv.glmnet
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
cv.out2
results
lambda.best
ridge.pred
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
?cv.glmnet
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
validationplot(pcr.fit,val.type='MSEP')
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
results
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
summary(pls.fit)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
names(Wage)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
attach(Wage)
age.range<-range(age)
age.grid<-seq(from=age.range[1],to=age.range[2])
age.grid
lm.pred<-predict(fit,age.grid)
lm.pred<-predict(fit,age=age.grid)
lm.pred
lm.pred<-predict(fit,newdata = list(age=age.grid))
lm.pred
summary(fit)
names(fit)
lm.pred<-predict(fit,list(age=age.grid))
names(lm.pred)
lm.pred<-predict(fit,list(age=age.grid),se=TRUE)
names(lm.pred)
se.bands<-cbind(lm.pred$fit+2*lm.pred$se.fit,lm.pred$fit-2*lm.pred$se.fit)
class(se.bands)
par(mfrow=c(1,2),mar=c(4.5,4.5,1,1),oma=c(0,0,4,0))
plot(age,wage,xlim=age.range,cex=.5,col='darkgrey')
lines(age.grid,lm.pred$fit,lwd=2,col='blue')
matlines(age.grid,se.bands,lwd=1,col='blue',lty=3)
?matlines
is.list(Wage)
is.data.frame((Wage))
I(3>1)
fit2<-glm(I(wage>250)~poly(age,4),family=binomial)
pred<-predict(fit2,newdata = list(age=age.grid),se=T)
pred
pred<-predict(fit2,newdata = list(age=age.grid),se=T,type='response')
names(pred)
pred
?cut
cut(rep(1,5),3)
cut(1:12,3)
library(Hmisc)
?cut2
?cut
library(splines)
detach(Wage)
rm(list=ls())
fit<-lm(wage~bs(age,knots=c(25,40,60),data=Wage))
fit<-lm(wage~bs(age,knots=c(25,40,60),data=Wage))
fit<-lm(wage~bs(age,knots=c(25,40,60),data=Wage))
Wage
names(Wage)
cb.fit<-lm(wage ~ bs(n,knots=c(25,40,60)),data=Wage)
cb.fit<-lm(wage ~ bs(age,knots=c(25,40,60)),data=Wage)
age.range<-range(Wage$age)
age.grid<-seq(from=age.range[1],to=age.range[2])
cb.pred<-predict(cb.fit,newdata=list(age=age))
cb.pred<-predict(cb.fit,newdata=list(age=age.grid))
plot(age,cb.pred,col='gray')
plot(Wage$age,cb.pred,col='gray')
plot(age.grid,cb.pred,col='gray')
lines(age.grid,cb.pred$fit,lwd=2)
cb.fit<-lm(wage ~ bs(age,df=6),data=Wage)
plot(age.grid,cb.fit,type='l',lwd=2)
cb.pred<-predict(cb.fit,age.grid)
cb.pred<-predict(cb.fit,list=(age=age.grid))
plot(age.grid,cb.pred,type='l',lwd=2)
age.grid
cb.pred
cb.pred<-predict(cb.fit,newdata=age.grid)
cb.pred<-predict(cb.fit,newdata=list(age=age.grid))
dim(cb.pred)
length(cb.pred)
?predict.lm
cb.pred
plot(age.grid,cb.pred,type='l',lwd=2)
ns.fit<-lm(age ~ ns(age,df=6),data=Wage)
ns.pred<-predict(ns.fit,newdata=list(age=age.grid))
head(ns.pred)
plot(age.grid,ns.pred)
ns.fit<-lm(Wage ~ ns(age,df=6),data=Wage)
ns.fit<-lm(wage ~ ns(age,df=6),data=Wage)
ns.pred<-predict(ns.fit,newdata=list(age=age.grid))
plot(age.grid,ns.pred,type='l',lwd=2)
?bs
lm.fit<-lm(wage ~ bs(age,df=6,degree=1),data=Wage)
lm.pred<-predict(lm.fit,newdata=list(age=age.grid))
plot(age.grid,lm.pred,type='l',lwd=2)
lm.fit<-lm(wage ~ bs(age,df=4,degree=1),data=Wage)
lm.pred<-predict(lm.fit,newdata=list(age=age.grid))
plot(age.grid,lm.pred,type='l',lwd=2)
lm.fit$coefficients
?smooth.spline
attach(Wage)
plot(age,wage,xlim=age.range,cex=0.5,col='darkgrey')
title('Smooth Spline')
fit<-smooth.spline(age,wage,df=16)
fit2<-smooth.spline(age,wage,cv=TRUE)
lines(fit,col='red',lwd=2)
lines(fit2,col='blue,lwd=2')
lines(fit2,col='blue',lwd=2)
?par
plot(age,wage,xlim=age.range,cex=.5,col='darkgrey')
title('Local Regression')
fit<-loess(wage,age,span=0.2,data=Wage)
fit<-loess(wage ~ age,span=0.2,data=Wage)
fit2<-loess(wage ~ age,span=0.5,data=Wage)
lines(age.grid,predict(fit,list(age=age.grid)),col='red',lwd=2)
lines(age.grid,predict(fit,data.frame(age=age.grid)),col='red',lwd=2)
lines(age.grid,predict(fit2,data.frame(age=age.grid)),col='red',lwd=2)
lines(age.grid,predict(fit2,data.frame(age=age.grid)),col='blue',lwd=2)
?loess
?ns
gam1<-lm(wage~ns(year,4)+ns(age,5),education,data=Wage)
install.packages(gam)
install.packages('gam')
library(gam)
gam.m3<-gam(wage ~ s(year,4)+s(age,5)+education,data=Wage)
par(mfrow(c(1,3)))
par(mfrow=c(1,3))
plot(gam.m3,se=TRUE,col='blue')
gam.lo=gam(wage ~ s(year,df=4)+lo(age,span=0.7)+education,data=wage)
gam.lo=gam(wage ~ s(year,df=4)+lo(age,span=0.7)+education,data=Wage)
?lo
gam.lo<-gam(wage ~ s(year,df=4) + lo(age,span=0.7)+education, data=Wage)
install.packages('gam')
install.packages("gam")
gam.lo<-gam(wage ~s(year,df=4)+lo(age,span=0.7)+education,data=Wage)
library(gam)
gam.lo<-gam(wage ~s(year,df=4)+lo(age,span=0.7)+education,data=Wage)
library(ISLR)
gam.lo<-gam(wage ~s(year,df=4)+lo(age,span=0.7)+education,data=Wage)
plot.gam(gam.lo,se=TRUE,col='green')
install.packages("akima")
library(akima)
gam.lo.i<-gam(wage~lo(year,age,span=0.5)+education,data=Wage)
plot(gam.lo.i)
mtcars[]
mtcars[]
rm(list=ls())
x<-c(1,2,3,4,5)
source('~/ISL/Chapter6/scratchpaper.R', echo=TRUE)
summary
summary(x)
?Filter
install.packages('tree')
install.packages('randomForest')
install.packages('gbm')
library(caret)
library(kernlab)
data(spam)
inTrain<-createDataPartition((y=spam$type))
inTrain<-createDataPartition(y=spam$type,p=0.75,list=FALSE)
training<-spam[inTrain,]
testing<-spam[-inTrain,]
dim(training)
dim(testing)
set.seed(32343)
model_fit<-train(type~.,data=training,method='glm')
warnings()
model_fit
names(model_fit)
model_fit$finalModel
predictions<-predict(model_fit,newdata=testing)
confusionMatrix(prediction,testing)
confusionMatrix(predictions,testing)
confusionMatrix(predictions,testing$type)
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
?train
library(caret)
?train
args(train.default)
args(train)
args(trainControl)
args(featurePlot)
args(preProcess)
preProcess()
?preProcess
?dummyVars
?bs
?polhy
?poly
?cor
?train
?trellis.par.set
?expand.grid
library(caret)
data("faithful")
set.seed(333)
?createDataPartition
?paste
paste0(1:12)
paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
paste0(1:12, c("st", "nd", "rd", rep("th", 9)))
paste(1:12, c("st", "nd", "rd", rep("th", 9))))
paste(1:12, c("st", "nd", "rd", rep("th", 9)))
?rrank
?rpart
library(caret)
?rpark
install.packages('rpart')
?rpark
?rpart
install.packages('rattle')
train.treebag
?train
?getTree
?getTree
?rf
library(randomForest)
?randomForest
library(readxl)
library(tidyverse)
tidyverse_update()
tidyverse::tidyverse_update()
library(tidyverse)
library(readxl)
install.packages('readxl')
install.packages("readxl")
library(readxl)
install.packages(c("assertthat", "chron", "curl", "data.table", "DBI", "digest", "expm", "formatR", "gam", "htmlTable", "installr", "lme4", "markdown", "MASS", "memoise", "nlme", "nycflights13", "plotly", "psych", "quantmod", "quantreg", "rgdal", "rmarkdown", "RMySQL", "sem", "shiny", "SparseM", "spdep", "stringi", "survival", "swirl", "tidyverse", "viridis", "XML", "zoo"))
