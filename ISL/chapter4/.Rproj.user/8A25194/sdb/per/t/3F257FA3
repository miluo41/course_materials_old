{
    "collab_server" : "",
    "contents" : "#1\n# library(ISLR);library(MASS);library(e1071);library(class)\n# glm.fit<-glm(Direction ~ Lag1 + Lag2 +\n#              Lag3 + Lag4 + Lag5 + Volume,family=binomial,data=Weekly)\n# glm.prob<-predict(glm.fit,type='response')\n# glm.pred<-rep('Down',nrow(Weekly))\n# glm.pred[glm.prob>0.5]<-'Up'\n# table(glm.pred,Weekly$Direction)\n# mean(glm.pred==Weekly$Direction)\n# train<-Weekly$Year<2009\n# # glm.fit1<-glm(Direction ~ Lag2,data=Weekly,family=binomial,subset=train)\n# # Weekly.test<-Weekly[!train,]\n# # glm.prob1<-predict(glm.fit1,Weekly.test,type='response')\n# # glm.pred1<-rep('Down',nrow(Weekly.test))\n# # glm.pred1[glm.prob1>0.5]<-'Up'\n# # table(glm.pred1,Weekly.test$Direction)\n# # mean(glm.pred1==Weekly.test$Direction)\n# results<-c(glm=0.625)\n# \n# Weekly.train<-Weekly[Weekly$Year<2009,]\n# Weekly.test<-Weekly[Weekly$Year>=2009,]\n# lda.fit<-lda(Direction ~ Lag2,data=Weekly.train)\n# lda.pred<-predict(lda.fit,Weekly.test)\n# table(lda.pred$class,Weekly.test$Direction)\n# mean(lda.pred$class==Weekly.test$Direction)\n# results<-c(results,lda=0.625)\n# \n# qda.fit<-qda(Direction ~ Lag2,Weekly.train)\n# qda.pred<-predict(qda.fit,Weekly.test)\n# mean(qda.pred$class==Weekly.test$Direction)\n# results<-c(results,qda=0.586)\n# \n# train.X<-matrix(Weekly.train$Lag2)\n# train.Y<-matrix(Weekly.train$Direction)\n# test.X<-matrix(Weekly.test$Lag2)\n# knn.pred<-knn(train.X,test.X,train.Y,k=1)\n# mean(knn.pred==Weekly.test$Direction)\n# \n# results<-c(results,knn=0.509)\n\n#2\n# library(caret)\n# mpg.median<-median(Auto$mpg)\n# mpg01<-as.numeric(Auto$mpg>mpg.median)\n# Auto1<-data.frame(Auto,mpg01)\n# in_train<-createDataPartition(Auto1$mpg01,p=0.7,list=FALSE)\n# Auto.train<-Auto1[in_train,]\n# Auto.test<-Auto1[-in_train,]\n# glm.fit<-glm(mpg01 ~ cylinders + displacement + horsepower +\n#                      weight + acceleration + year +origin,\n#              data=Auto1,family=binomial)\n# lda.fit<-lda(mpg01 ~ year + weight,data=Auto.train)\n# lda.pred<-predict(lda.fit,Auto.test)$class\n# mean(lda.pred==Auto.test$mpg01)\n# \n# qda.fit <-qda(mpg01 ~ year + weight,data=Auto.train)\n# qda.pred<-predict(qda.fit,Auto.test)$class\n# mean(qda.pred==Auto.test$mpg01)\n# \n# train.X<-Auto.train[,c('year','weight')]\n# test.X<-Auto.test[,c('year','weight')]\n# train.Y<-Auto.train$mpg01\n# knn.pred<-knn(train.X,test.X,train.Y,1)\n# mean(knn.pred==Auto.test$mpg01)\n\n# Power<-function(){\n#         2^3\n# }\n# Power2<-function(x,a){\n#         x^a\n# }\n# \n# Power3<-function(x,a){\n#         results<-x^a\n#         return(results)\n# }\n# PlotPower<-function(x,a){\n#         y<-Power3(x,a)\n#         plot(x,y)\n# }\ncrim.mean<-mean(Boston$crim)\ncrim.stat<-rep('Above',nrow(Boston))\ncrim.stat[Boston$crim<crim.mean]<-'Below'\nBoston2<-cbind(Boston,crim.stat)\nin_train<-createDataPartition(Boston2$crim.stat,p=0.7,list=FALSE)\nBoston.train<-Boston2[in_train,]\nBoston.test<-Boston2[-in_train,]\nglm.fit<-glm(crim.stat ~ . -crim -crim.stat -tax -chas,data=Boston.train,family=binomial)\nglm.prob<-predict(glm.fit,Boston.test,type='response')\nglm.pred<-rep('Below',nrow(Boston.test))\nglm.pred[glm.prob<0.5]<-'Above'\nmean(glm.pred==Boston.test$crim.stat)\ntable(glm.pred,Boston.test$crim.stat)\n\nlda.fit<-lda(crim.stat ~ . -crim -crim.stat -tax -chas,data=Boston.train)\nlda.pred<-predict(lda.fit,Boston.test)\nmean(lda.pred$class==Boston.test$crim.stat)\n\ntrain.X<-Boston.train[,!names(Boston.train) %in% c('crim.stat','crim','tax','chas')]\ntrain.Y<-Boston.train[,'crim.stat']\ntest.X<-Boston.test[,!names(Boston.train) %in% c('crim.stat','crim','tax','chas')]\nknn_tune<-function(k){\n        results<-c()\n        names<-1:10\n        for(i in 1:k){\n                knn.pred<-knn(train.X,test.X,train.Y,k)\n                accuracy<-mean(knn.pred==Boston.test$crim.stat)\n                results<-c(results,accuracy)\n        }\n        names(results)<-1:10\n        plot(1:10,results)\n        return(results)\n}",
    "created" : 1492466082017.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4122662627",
    "id" : "3F257FA3",
    "lastKnownWriteTime" : 1492529936,
    "last_content_update" : 1492529936893,
    "path" : "~/ISL/chapter4/chapter4.R",
    "project_path" : "chapter4.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}